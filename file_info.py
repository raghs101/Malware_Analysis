import hashlib
import os
import magic
from pathlib import Path
import pathlib
import hashlib
import requests
import platform
import pefile
import json
import subprocess


def world():
    print("Hello")
class File_Analysis:
    def __init__(self,file_path):
        self.file_path = file_path
    def get_sha_256hash(self):
        hash_sha256 = hashlib.sha256()
        with open(self.file_path,'rb') as f:
            for chunk in iter(lambda: f.read(4096), b""):
                hash_sha256.update(chunk)
            return hash_sha256.hexdigest()
    def ftype(self):
        magic_object = magic.Magic(mime=True)
        file_type = magic_object.from_file(self.file_path)
        return file_type
    def get_name(self):
        return (Path(self.file_path).stem)
    def get_strings(self):
        # with open(self.file_path,'rb') as f:
        #     try:
        #         f.read()
        #     except:
        #         return "Nothing Found"
        process = subprocess.Popen(['strings', self.file_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        output, error = process.communicate()
        return output

    def get_file_size(self):
        return os.path.getsize(self.file_path)
    def analysed(self):
        url = "https://www.virustotal.com/api/v3/files/{id}".format(id=self.get_sha_256hash())

        headers = {"accept": "application/json","x-apikey":"31e747759313d997019a46236f6cdb3bbe2cbc01dfcfac64a9403d01d6500622"}

        response = requests.get(url, headers=headers)

        json_object = json.loads(response.text)
        if(list(json_object.keys())[0] == 'error'):
            return False
        else:
            return True



